<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:ModernWpf.Controls"
                    xmlns:local="clr-namespace:ModernWpf"
                    xmlns:modern="http://modernwpf"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ModernWpf;component/Themes/BaseValues.xaml" />
        <ResourceDictionary Source="/ModernWpf;component/Themes/ColorLight.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="ModernTitleBar" TargetType="modern:TitleBar">
        <Setter Property="ActiveBackground" Value="{DynamicResource ModernAccent}" />
        <Setter Property="ActiveForeground" Value="{DynamicResource AccentForeground}" />
        <Setter Property="InactiveBackground" Value="{DynamicResource ModernAccentAlpha2}" />
        <Setter Property="InactiveForeground" Value="{DynamicResource AccentForeground}" />
    </Style>


    <Style x:Key="ModernFlyout" TargetType="modern:Flyout">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
    </Style>


    <Style x:Key="ModernFlyoutContainer" TargetType="modern:FlyoutContainer">
        <Setter Property="Background" Value="{DynamicResource OverlayBackground}" />
    </Style>


    <Style x:Key="ModernMessageBoxFlyout" TargetType="modern:MessageBoxFlyout">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
    </Style>

    <!--
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    -->

    <Style x:Key="ModernFocusVisualDashed">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   SnapsToDevicePixels="True"
                                   Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="1.5"
                                   StrokeEndLineCap="Square" />
                        <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   SnapsToDevicePixels="True"
                                   Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeDashArray="1,1"
                                   StrokeDashOffset="0.5"
                                   StrokeEndLineCap="Square" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  testing  -->
    <Style x:Key="ModernItemsControl" TargetType="ItemsControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  text  -->
    <Style x:Key="ModernTextBlock"
           BasedOn="{StaticResource {x:Type TextBlock}}"
           TargetType="TextBlock">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="modern:UIHooks.AutoCrisp" Value="True" />
        </Style.Setters>
    </Style>

    <Style x:Key="MarlettGlyph" TargetType="TextBlock">
        <!--  BasedOn="{StaticResource ModernTextBlock}">  -->
        <Setter Property="FontFamily" Value="Marlett" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="ModernLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  buttons  -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Margin="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDefault" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource ButtonDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonDisabledBorderThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernButtonNoChrome" TargetType="ButtonBase">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="2 1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Opacity" Value=".75" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X="1" Y="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundThemeBrush}" />-->
                <Setter Property="Opacity" Value=".4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernToggleButton" TargetType="ToggleButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Margin="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonPointerOverBackgroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonDisabledBorderThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonDisabledForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedBorderThemeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedPointerOverBorderThemeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedPressedForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonCheckedPressedBorderThemeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ToggleButtonCheckedDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ToggleButtonCheckedDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonDisabledBorderThemeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernRadioButton" TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonContentForegroundThemeBrush}" />
        <Setter Property="Padding" Value="1,4,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="MinHeight" Value="29" />
        <!--<Setter Property="Margin" Value="0 0 0 2"/>-->
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Margin="0 2 4 2">
                                <Ellipse x:Name="BackgroundEllipse"
                                         Width="{DynamicResource RadioButtonBorderSize}"
                                         Height="{DynamicResource RadioButtonBorderSize}"
                                         Fill="{DynamicResource RadioButtonBackgroundThemeBrush}"
                                         SnapsToDevicePixels="True"
                                         Stroke="{DynamicResource RadioButtonBorderThemeBrush}"
                                         StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}"
                                         UseLayoutRounding="False" />
                                <Ellipse x:Name="CheckGlyph"
                                         Width="{DynamicResource RadioButtonGlyphSize}"
                                         Height="{DynamicResource RadioButtonGlyphSize}"
                                         Fill="{DynamicResource ModernAccent}"
                                         Opacity="0"
                                         SnapsToDevicePixels="True"
                                         UseLayoutRounding="False" />
                                <!--<Rectangle x:Name="FocusVisualWhite"
                                           Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                           StrokeEndLineCap="Square"
                                           StrokeDashArray="1,1"
                                           Opacity="0"
                                           StrokeDashOffset="1.5"
                                           Width="29"
                                           Height="29" />
                                <Rectangle x:Name="FocusVisualBlack"
                                           Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                           StrokeEndLineCap="Square"
                                           StrokeDashArray="1,1"
                                           Opacity="0"
                                           StrokeDashOffset="0.5"
                                           Width="29"
                                           Height="29" />-->
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisualWhite" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisualBlack" Property="Opacity" Value="1" />
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonPointerOverBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonPointerOverBorderThemeBrush}" />
                            <!--<Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonPointerOverForegroundThemeBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonPressedBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonPressedBorderThemeBrush}" />
                            <!--<Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonPressedForegroundThemeBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundEllipse" Property="Fill" Value="{DynamicResource RadioButtonDisabledBackgroundThemeBrush}" />
                            <Setter TargetName="BackgroundEllipse" Property="Stroke" Value="{DynamicResource RadioButtonDisabledBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource RadioButtonDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource RadioButtonContentDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernRepeatButton" TargetType="RepeatButton">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource RepeatButtonForegroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource RepeatButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{DynamicResource ButtonControlPadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                            Margin="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonPressedBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource RepeatButtonDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource RepeatButtonDisabledForegroundThemeBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource RepeatButtonDisabledBorderThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernHyperlinkTextBlock"
           BasedOn="{StaticResource ModernTextBlock}"
           TargetType="TextBlock">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="TextDecorations" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ButtonBase}}, Path=(TextBlock.TextDecorations)}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernHyperlinkButton" TargetType="ButtonBase">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Foreground" Value="{DynamicResource HyperlinkForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource HyperlinkButtonBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource HyperlinkButtonBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource HyperlinkButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter.Resources>
                                <Style BasedOn="{StaticResource ModernHyperlinkTextBlock}" TargetType="TextBlock" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HyperlinkPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HyperlinkPressedForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource HyperlinkDisabledThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="ModernCaptionButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionForeground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="local:Chrome.IsHitTestVisible" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="8 6" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Opacity" Value=".85"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ButtonContent" RecognizesAccessKey="True"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".4"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style x:Key="ModernControlButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Control}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="local:Chrome.IsHitTestVisible" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="9 5 9 6" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ButtonContent" RecognizesAccessKey="False"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccentAlpha8}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentForeground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--  window  -->
    <Style x:Key="ModernWindowBase" TargetType="Window">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <!--<Setter Property="modern:UIHooks.AutoDpiScale" Value="True" />-->
    </Style>

    <Style x:Key="ModernWindow"
           BasedOn="{StaticResource ModernWindowBase}"
           TargetType="Window">
        <Setter Property="modern:Chrome.Chrome">
            <Setter.Value>
                <modern:Chrome ActiveBorderBrush="{DynamicResource ModernAccent}" InactiveBorderBrush="{DynamicResource ModernForeground4}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <modern:TitleBar Style="{StaticResource ModernTitleBar}" />

                            <modern:FlyoutContainer x:Name="dialogContainer"
                                                    Grid.RowSpan="2"
                                                    DisableTarget="{Binding ElementName=MainContent}"
                                                    OpenZIndex="1" />

                            <modern:AnimatedContentControl x:Name="MainContent"
                                                           Grid.Row="1"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}" />

                            <ResizeGrip x:Name="PART_ResizeGrip"
                                        Grid.Row="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Panel.ZIndex="2"
                                        IsTabStop="False"
                                        Visibility="Collapsed" />

                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernWindowNoTitle"
           BasedOn="{StaticResource ModernWindowBase}"
           TargetType="Window">
        <Setter Property="modern:Chrome.Chrome">
            <Setter.Value>
                <modern:Chrome ActiveBorderBrush="{DynamicResource ModernAccent}" InactiveBorderBrush="{DynamicResource ModernForeground4}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">

                            <modern:FlyoutContainer x:Name="dialogContainer"
                                                    DisableTarget="{Binding ElementName=MainContent}"
                                                    OpenZIndex="1" />

                            <modern:AnimatedContentControl x:Name="MainContent"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}" />

                            <ResizeGrip x:Name="PART_ResizeGrip"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Panel.ZIndex="2"
                                        IsTabStop="False"
                                        Visibility="Collapsed" />

                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="ModernWindow" TargetType="Window">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="local:Chrome.Chrome">
            <Setter.Value>
                <local:Chrome x:Name="chrome"
                              ActiveBorderBrush="{DynamicResource ModernAccent}"
                              InactiveBorderBrush="{DynamicResource ModernForeground4}"
                              ActiveCaptionForeground="{DynamicResource ActiveCaptionForeground}"
                              InactiveCaptionForeground="{DynamicResource InactiveCaptionForeground}"
                              />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_Caption" VerticalAlignment="Top"
                                      Height="{Binding Path=(local:Chrome.CaptionHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:WindowCaptionHeightConverter.Instance}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <DockPanel VerticalAlignment="Top">
                                    <Image x:Name="PART_Icon" Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:AppIconImageConverter.Instance}}" Width="20" Height="20"
                                               Margin="8 4 0 4" VerticalAlignment="Center" Stretch="Uniform"
                                               Visibility="{Binding Path=(local:Chrome.ShowCaptionIcon), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"
                                               DockPanel.Dock="Left"></Image>

                                    <TextBlock x:Name="PART_WindowTitle" Text="{TemplateBinding Title}"
                                                   VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                                                   HorizontalAlignment="Left"
                                                   FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" Margin="{DynamicResource ContentThemePadding}"
                                                   Style="{StaticResource ModernTextBlock}"
                                                   Visibility="{Binding Path=(local:Chrome.ShowCaptionText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"></TextBlock>
                                </DockPanel>

                                <ContentPresenter Grid.Column="1" VerticalAlignment="Top"
                                                  UseLayoutRounding="True"
                                                  Content="{Binding Path=(local:Chrome.CaptionExtraContent), RelativeSource={RelativeSource TemplatedParent}}"
                                                  local:Chrome.IsHitTestVisible="True"></ContentPresenter>

                                <ctrl:ControlBox x:Name="ControlBox" Grid.Column="2"/>
                            </Grid>
                            <ctrl:ModernContentControl Content="{TemplateBinding Content}"
                                                       x:Name="MainContent"
                                                       Grid.Row="1"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"></ctrl:ModernContentControl>

                            <ctrl:DialogControlContainer x:Name="dialogContainer" DisableTarget="{Binding ElementName=MainContent}"
                                                         Grid.RowSpan="2"></ctrl:DialogControlContainer>

                            <ResizeGrip x:Name="PART_ResizeGrip" HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False"
                                        Grid.RowSpan="2"/>

                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PART_Caption" Property="Background" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Caption" Property="Background" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Icon" Property="Opacity" Value=".6"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernWindowFull" TargetType="Window">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="local:Chrome.Chrome">
            <Setter.Value>
                <local:Chrome x:Name="chrome"
                              ActiveBorderBrush="{DynamicResource ModernAccent}"
                              InactiveBorderBrush="{DynamicResource ModernForeground4}"
                              ActiveCaptionForeground="{DynamicResource ActiveCaptionForeground}"
                              InactiveCaptionForeground="{DynamicResource InactiveCaptionForeground}"
                              />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">

                            <Rectangle x:Name="PART_Caption"
                                       HorizontalAlignment="Stretch" VerticalAlignment="Top"
                                       Grid.ColumnSpan="2"
                                       Height="{Binding Path=(local:Chrome.CaptionHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:WindowCaptionHeightConverter.Instance}}"
                                       ></Rectangle>

                            <ctrl:ModernContentControl Content="{TemplateBinding Content}"
                                                       x:Name="MainContent"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"></ctrl:ModernContentControl>

                            <Grid x:Name="PART_Control" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <DockPanel VerticalAlignment="Top">
                                    <Image x:Name="PART_Icon" Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:AppIconImageConverter.Instance}}" Width="20" Height="20"
                                           Margin="8 4 0 4" VerticalAlignment="Center" Stretch="Uniform"
                                           Visibility="{Binding Path=(local:Chrome.ShowCaptionIcon), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"
                                           DockPanel.Dock="Left"></Image>

                                    <TextBlock x:Name="PART_WindowTitle" Text="{TemplateBinding Title}"
                                               VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                                               HorizontalAlignment="Left"
                                               FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" Margin="{DynamicResource ContentThemePadding}"
                                               Style="{StaticResource ModernTextBlock}"
                                               Visibility="{Binding Path=(local:Chrome.ShowCaptionText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"></TextBlock>
                                </DockPanel>

                                <ContentPresenter Grid.Column="1" VerticalAlignment="Top"
                                                  UseLayoutRounding="True"
                                                  Content="{Binding Path=(local:Chrome.CaptionExtraContent), RelativeSource={RelativeSource TemplatedParent}}"
                                                  local:Chrome.IsHitTestVisible="true"></ContentPresenter>

                                <ctrl:ControlBox x:Name="ControlBox" Grid.Column="2"/>
                            </Grid>

                            <ctrl:DialogControlContainer x:Name="dialogContainer" DisableTarget="{Binding ElementName=MainContent}"></ctrl:DialogControlContainer>

                            <ResizeGrip x:Name="PART_ResizeGrip" HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PART_Caption" Property="Fill" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Caption" Property="Fill" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Icon" Property="Opacity" Value=".6"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernWindowV2" TargetType="Window">
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ModernBackground}"/>
        <Setter Property="local:Chrome.Chrome">
            <Setter.Value>
                <local:Chrome x:Name="chrome"
                              ActiveBorderBrush="{DynamicResource ModernAccent}"
                              InactiveBorderBrush="{DynamicResource ModernForeground4}"
                              ActiveCaptionBrush="{DynamicResource ModernAccent}"
                              InactiveCaptionBrush="{DynamicResource ModernBackground2}"
                              ActiveCaptionForeground="{DynamicResource AccentForeground}"
                              InactiveCaptionForeground="{DynamicResource ModernForeground2}"
                              />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <AdornerDecorator>
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_Caption" VerticalAlignment="Top"
                                  Height="{Binding Path=(local:Chrome.CaptionHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:WindowCaptionHeightConverter.Instance}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <DockPanel VerticalAlignment="Top">
                                    <Image x:Name="PART_Icon" Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:AppIconImageConverter.Instance}}" Width="20" Height="20"
                                               Margin="8 4 0 4" VerticalAlignment="Center" Stretch="Uniform"
                                               Visibility="{Binding Path=(local:Chrome.ShowCaptionIcon), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"
                                               DockPanel.Dock="Left"></Image>

                                    <TextBlock x:Name="PART_WindowTitle" Text="{TemplateBinding Title}"
                                                   VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                                                   HorizontalAlignment="Left"
                                                   FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}" Margin="{DynamicResource ContentThemePadding}"
                                                   Style="{StaticResource ModernTextBlock}"
                                                   Visibility="{Binding Path=(local:Chrome.ShowCaptionText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static modern:BoolVisibleConverter.Instance}}"></TextBlock>
                                </DockPanel>

                                <ContentPresenter Grid.Column="1" VerticalAlignment="Top"
                                                  UseLayoutRounding="True"
                                                  Content="{Binding Path=(local:Chrome.CaptionExtraContent), RelativeSource={RelativeSource TemplatedParent}}"
                                                  local:Chrome.IsHitTestVisible="True"></ContentPresenter>

                                <ctrl:ControlBox Grid.Column="2" Background="{DynamicResource ModernBackground2}" Padding="10 0 0 0"
                                                 Foreground="{DynamicResource ModernForeground}"
                                                />
                            </Grid>
                            <ctrl:ModernContentControl Content="{TemplateBinding Content}"
                                                       x:Name="MainContent"
                                                       Grid.Row="1"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"></ctrl:ModernContentControl>

                            <ctrl:DialogControlContainer x:Name="dialogContainer" DisableTarget="{Binding ElementName=MainContent}"
                                                         Grid.RowSpan="2"></ctrl:DialogControlContainer>

                            <ResizeGrip x:Name="PART_ResizeGrip" HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False"
                                        Grid.RowSpan="2"/>

                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PART_Caption" Property="Background" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).ActiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Caption" Property="Background" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_WindowTitle" Property="Foreground" Value="{Binding Path=(local:Chrome.Chrome).InactiveCaptionForeground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="PART_Icon" Property="Opacity" Value=".6"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--  status  -->
    <Style x:Key="ModernStatusBar" TargetType="StatusBar">
        <Setter Property="Padding" Value="4 1" />
        <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
        <!--<Setter Property="TextOptions.TextFormattingMode" Value="Display" />-->
    </Style>

    <Style x:Key="ModernStatusBarItem" TargetType="StatusBarItem">
        <Setter Property="Margin" Value="0 0 20 0" />
    </Style>

    <!--  tooltip  -->
    <Style x:Key="ModernToolTip" TargetType="ToolTip">
        <Setter Property="Foreground" Value="{DynamicResource ToolTipForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ToolTipBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ToolTipBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ToolTipContentThemeFontSize}" />
        <Setter Property="Padding" Value="10,6,10,7" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <!--<Setter Property="modern:UIHooks.AutoDpiScale" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <theme:SystemDropShadowChrome x:Name="Shadow"
                                                  Margin="{DynamicResource PopUpShadowMargin}"
                                                  Color="{DynamicResource PopupShadowColor}">
                        <Border x:Name="LayoutRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="False">
                            <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  checkbox  -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxContentForegroundThemeBrush}" />
        <Setter Property="Padding" Value="2,3,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">

                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid VerticalAlignment="Center">
                                <Rectangle x:Name="NormalRectangle"
                                           Width="{DynamicResource CheckBoxBorderSize}"
                                           Height="{DynamicResource CheckBoxBorderSize}"
                                           Fill="{DynamicResource CheckBoxBackgroundThemeBrush}"
                                           SnapsToDevicePixels="True"
                                           Stroke="{DynamicResource CheckBoxBorderThemeBrush}"
                                           StrokeThickness="{DynamicResource CheckBoxBorderThemeThickness}"
                                           UseLayoutRounding="False" />
                                <Path x:Name="CheckGlyph"
                                      Width="16"
                                      Height="14"
                                      Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z"
                                      Fill="{DynamicResource ModernAccent}"
                                      FlowDirection="LeftToRight"
                                      Opacity="0"
                                      SnapsToDevicePixels="True"
                                      Stretch="Fill" />
                                <Rectangle x:Name="IndeterminateGlyph"
                                           Width="9"
                                           Height="9"
                                           Fill="{DynamicResource ModernAccent}"
                                           Opacity="0"
                                           SnapsToDevicePixels="True"
                                           UseLayoutRounding="False" />
                                <!--<Rectangle x:Name="FocusVisualWhite"
                                       Stroke="{DynamicResource FocusVisualWhiteStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="0.5"
                                       Width="27"
                                       Height="27" />
                                <Rectangle x:Name="FocusVisualBlack"
                                       Stroke="{DynamicResource FocusVisualBlackStrokeThemeBrush}"
                                       StrokeEndLineCap="Square"
                                       StrokeDashArray="1,1"
                                       Opacity="0"
                                       StrokeDashOffset="1.5"
                                       Width="27"
                                       Height="27" />-->
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusVisualWhite" Property="Opacity" Value="1" />
                            <Setter TargetName="FocusVisualBlack" Property="Opacity" Value="1" />
                        </Trigger>-->
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxPointerOverBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxPointerOverBorderThemeBrush}" />
                            <!--<Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxPointerOverForegroundThemeBrush}" />-->
                            <!--<Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxPointerOverForegroundThemeBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxPressedBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxPressedBorderThemeBrush}" />
                            <!--<Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxPressedForegroundThemeBrush}" />-->
                            <!--<Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxPressedForegroundThemeBrush}" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="NormalRectangle" Property="Fill" Value="{DynamicResource CheckBoxDisabledBackgroundThemeBrush}" />
                            <Setter TargetName="NormalRectangle" Property="Stroke" Value="{DynamicResource CheckBoxDisabledBorderThemeBrush}" />
                            <Setter TargetName="CheckGlyph" Property="Fill" Value="{DynamicResource CheckBoxDisabledForegroundThemeBrush}" />
                            <Setter TargetName="IndeterminateGlyph" Property="Fill" Value="{DynamicResource CheckBoxDisabledForegroundThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CheckBoxContentDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  textbox  -->
    <!--
        re-implement contextmenu to override textbox contextmenu style not applied bug
        plus some additional items
    -->
    <ContextMenu x:Key="TextBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Undo" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdUndo], Mode=OneWay}" />
        <MenuItem Command="ApplicationCommands.Redo" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdRedo], Mode=OneWay}" />
        <Separator />
        <MenuItem Command="ApplicationCommands.Cut" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdCut], Mode=OneWay}" />
        <MenuItem Command="ApplicationCommands.Copy" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdCopy], Mode=OneWay}" />
        <MenuItem Command="ApplicationCommands.Paste" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdPaste], Mode=OneWay}" />
        <Separator />
        <MenuItem Command="ApplicationCommands.SelectAll" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdSelectAll], Mode=OneWay}" />
    </ContextMenu>

    <ContextMenu x:Key="PasswordBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Paste" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdPaste], Mode=OneWay}" />
        <Separator />
        <MenuItem Command="ApplicationCommands.SelectAll" Header="{Binding Source={x:Static modern:CommandTextBinder.Instance}, Path=[CmdSelectAll], Mode=OneWay}" />
    </ContextMenu>


    <Style x:Key="TextBoxButtonStyle" TargetType="Button">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxButtonBorder}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxButtonBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BorderElement"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxButtonHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxButtonHoverBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBoxButtonHoverForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxButtonPressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxButtonPressedBorder}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBoxButtonPressedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              Margin="0"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Path=(local:TextBoxUI.LeadingElement),
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="{Binding Path=Content,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />

                            <ctrl:AnimatedScrollViewer x:Name="PART_ContentHost"
                                                       Grid.Column="1"
                                                       HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                       IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                       IsTabStop="False"
                                                       Padding="{TemplateBinding Padding}"
                                                       VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />

                            <Border x:Name="Watermark"
                                    Grid.Column="1"
                                    IsHitTestVisible="False"
                                    Padding="{TemplateBinding Padding}"
                                    Visibility="{Binding Path=Text,
                                                         RelativeSource={RelativeSource TemplatedParent},
                                                         Mode=OneWay,
                                                         Converter={x:Static modern:NullEmptyCollapsedConverter.Instance},
                                                         ConverterParameter=not}">
                                <TextBlock x:Name="WatermarkText"
                                           Margin="2 0"
                                           VerticalAlignment="Center"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{DynamicResource TextBoxDisabledForeground}"
                                           Text="{Binding Path=(local:TextBoxUI.WatermarkText),
                                                          RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>

                            <Button x:Name="DeleteButton"
                                    Grid.Column="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Command="{x:Static modern:EditorCommands.ClearTextBoxCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource TextBoxButtonStyle}">
                                <Button.Visibility>
                                    <MultiBinding Converter="{x:Static modern:MultiBoolVisibleConverter.Instance}">
                                        <Binding Path="(local:TextBoxUI.ShowClearButton)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </Button.Visibility>

                                <TextBlock Margin="1 0"
                                           Style="{DynamicResource MarlettGlyph}"
                                           Text="r" />
                            </Button>

                            <ContentPresenter Grid.Column="3"
                                              Margin="0"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Path=(local:TextBoxUI.TrailingElement),
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="{Binding Path=Content,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="WatermarkText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernTextBoxNoChrome" TargetType="TextBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="CaretBrush" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="-2 0" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Grid.Column="0"
                                          Margin="{Binding Path=BorderThickness,
                                                           RelativeSource={RelativeSource TemplatedParent},
                                                           Converter={x:Static modern:ThicknessZeroSideConverter.Instance},
                                                           ConverterParameter=right}"
                                          VerticalAlignment="Stretch"
                                          Content="{Binding Path=(local:TextBoxUI.LeadingElement),
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                          Visibility="{Binding Path=Content,
                                                               RelativeSource={RelativeSource Self},
                                                               Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />

                        <ctrl:AnimatedScrollViewer x:Name="PART_ContentHost"
                                                   Grid.Column="1"
                                                   Margin="{TemplateBinding BorderThickness}"
                                                   HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                   IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                   IsTabStop="False"
                                                   Padding="{TemplateBinding Padding}"
                                                   VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />

                        <ContentPresenter Grid.Column="2"
                                          Margin="{Binding Path=BorderThickness,
                                                           RelativeSource={RelativeSource TemplatedParent},
                                                           Converter={x:Static modern:ThicknessZeroSideConverter.Instance},
                                                           ConverterParameter=left}"
                                          VerticalAlignment="Stretch"
                                          Content="{Binding Path=(local:TextBoxUI.TrailingElement),
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                          Visibility="{Binding Path=Content,
                                                               RelativeSource={RelativeSource Self},
                                                               Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernRichTextBox" TargetType="RichTextBox">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}" />
        <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichTextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ctrl:AnimatedScrollViewer x:Name="PART_ContentHost"
                                                   HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                   IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                   IsTabStop="False"
                                                   Padding="{TemplateBinding Padding}"
                                                   VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="ContextMenu" Value="{StaticResource PasswordBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Grid.Column="0"
                                              Margin="{Binding Path=BorderThickness,
                                                               RelativeSource={RelativeSource TemplatedParent},
                                                               Converter={x:Static modern:ThicknessZeroSideConverter.Instance},
                                                               ConverterParameter=right}"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Path=(local:TextBoxUI.LeadingElement),
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="{Binding Path=Content,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />

                            <ctrl:AnimatedScrollViewer x:Name="PART_ContentHost"
                                                       Grid.Column="1"
                                                       HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                       IsTabStop="False"
                                                       Padding="{TemplateBinding Padding}"
                                                       VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />

                            <Border x:Name="Watermark"
                                    Grid.Column="1"
                                    IsHitTestVisible="False"
                                    Padding="{TemplateBinding Padding}"
                                    Visibility="{Binding Path=(local:TextBoxUI.HasPassword),
                                                         RelativeSource={RelativeSource TemplatedParent},
                                                         Mode=OneWay,
                                                         Converter={x:Static modern:BoolVisibleConverter.Instance},
                                                         ConverterParameter=not}">
                                <TextBlock x:Name="WatermarkText"
                                           Margin="2 0"
                                           VerticalAlignment="Center"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{DynamicResource TextBoxDisabledForeground}"
                                           Text="{Binding Path=(local:TextBoxUI.WatermarkText),
                                                          RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>

                            <ContentPresenter Grid.Column="2"
                                              Margin="{Binding Path=BorderThickness,
                                                               RelativeSource={RelativeSource TemplatedParent},
                                                               Converter={x:Static modern:ThicknessZeroSideConverter.Instance},
                                                               ConverterParameter=left}"
                                              VerticalAlignment="Stretch"
                                              Content="{Binding Path=(local:TextBoxUI.TrailingElement),
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="{Binding Path=Content,
                                                                   RelativeSource={RelativeSource Self},
                                                                   Converter={x:Static modern:NullEmptyCollapsedConverter.Instance}}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="WatermarkText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  progressbar  -->
    <Style x:Key="ModernProgressBar" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{DynamicResource ProgressBarForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ProgressBarBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ProgressBarBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ProgressBarBorderThemeThickness}" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Height" Value="{DynamicResource ProgressBarThemeMinHeight}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">

                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">

                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
                                <Grid x:Name="Foreground">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                                    <Grid x:Name="Animation"
                                          ClipToBounds="true"
                                          Visibility="Collapsed">
                                        <Rectangle x:Name="PART_GlowRect"
                                                   Width="100"
                                                   Margin="-100,0,0,0"
                                                   HorizontalAlignment="Left"
                                                   Fill="{DynamicResource ProgressBarIndeterminateForegroundThemeBrush}" />
                                    </Grid>
                                </Grid>
                            </Decorator>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  combobox  -->

    <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ComboBoxItemPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha7}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemDisabledForegroundThemeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemSelectedDisabledForegroundThemeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThickness}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ModernComboBoxItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="MainGrid">
                            <Grid.Resources>
                                <Style x:Key="ComboBoxEditableTextBox" TargetType="TextBox">
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="AllowDrop" Value="true" />
                                    <Setter Property="MinWidth" Value="0" />
                                    <Setter Property="MinHeight" Value="0" />
                                    <Setter Property="Margin" Value="-2 -1" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <ctrl:AnimatedScrollViewer x:Name="PART_ContentHost"
                                                                           Background="Transparent"
                                                                           Focusable="false"
                                                                           HorizontalScrollBarVisibility="Hidden"
                                                                           VerticalScrollBarVisibility="Hidden" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="24" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                            <ToggleButton x:Name="Toggler"
                                          Grid.ColumnSpan="2"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="#01000000" />
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Border x:Name="EditPart"
                                    Padding="{TemplateBinding Padding}"
                                    Visibility="Collapsed">
                                <TextBox x:Name="PART_EditableTextBox"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         IsReadOnly="{Binding IsReadOnly,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                         Style="{StaticResource ComboBoxEditableTextBox}" />
                            </Border>

                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   IsOpen="{Binding IsDropDownOpen,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <theme:SystemDropShadowChrome x:Name="Shadow"
                                                              Margin="{DynamicResource PopUpShadowMargin}"
                                                              Color="{DynamicResource PopupShadowColor}">
                                    <Border x:Name="PopupBorder"
                                            MinWidth="{Binding ActualWidth,
                                                               ElementName=MainGrid}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            HorizontalAlignment="Stretch"
                                            Background="{DynamicResource ComboBoxPopupBackgroundThemeBrush}"
                                            BorderBrush="{DynamicResource ComboBoxPopupBorderThemeBrush}"
                                            BorderThickness="{DynamicResource ComboBoxPopupBorderThickness}">
                                        <ScrollViewer x:Name="ScrollViewer"
                                                      Foreground="{DynamicResource ComboBoxPopupForegroundThemeBrush}"
                                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                    </Border>
                                </theme:SystemDropShadowChrome>
                            </Popup>
                            <Path x:Name="DropDownGlyph"
                                  Grid.Column="1"
                                  Width="8"
                                  Height="7"
                                  Margin="0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z"
                                  Fill="{DynamicResource ComboBoxArrowForegroundThemeBrush}"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  UseLayoutRounding="False"
                                  IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="False">
                            <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="DropDownGlyph" Property="Fill" Value="{DynamicResource ModernAccent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEditable" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="Highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="HighlightBackground" Property="Opacity" Value="1"/>-->
                        </MultiTrigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="PopupBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="EditPart" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter TargetName="DropDownGlyph" Property="Fill" Value="{DynamicResource TextBoxDisabledForeground}" />
                            <Setter TargetName="Toggler" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="DropDownGlyph" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="PopupBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" Value="false" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DropDownGlyph" Property="Fill" Value="{DynamicResource TextBoxDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEditable" Value="False" />
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="Background" Value="{DynamicResource ModernAccentAlpha9}"/>-->
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
            </MultiTrigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  listbox  -->

    <Style x:Key="ModernListBoxItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ListBoxForegroundThemeBrush}" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ListBoxItemPointerOverBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ListBoxItemPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha7}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ListBoxItemDisabledForegroundThemeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedDisabledBackgroundThemeBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ListBoxItemSelectedDisabledForegroundThemeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernListBoxItemNoChrome" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ListBoxForegroundThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent9}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccent8}" />
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ListBoxItemDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernListBox" TargetType="ListBox">
        <Setter Property="Foreground" Value="{DynamicResource ListBoxForegroundThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource ListBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ListBoxBorderThemeThickness}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ModernListBoxItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border x:Name="LayoutRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" Value="{DynamicResource ListBoxFocusBackgroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource ListBoxDisabledForegroundThemeBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernListBoxNoChrome"
           BasedOn="{StaticResource ModernListBox}"
           TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  datepicker & calendar  -->

    <Style x:Key="ModernCalendarItem" TargetType="CalendarItem">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarItem">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Margin="6"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource ModernForeground}"
                                       Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid Name="PART_Root">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid.Resources>
                                    <Style x:Key="CalendarHeadButton" TargetType="Button">
                                        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                                        <Setter Property="Background" Value="#01000000" />
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Opacity" Value=".5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>


                                </Grid.Resources>

                                <Grid Background="{DynamicResource ModernBackground3}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_PreviousButton"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Width="28"
                                            Height="20"
                                            HorizontalAlignment="Left"
                                            Focusable="False"
                                            Padding="14,-3,0,0"
                                            Style="{StaticResource CalendarHeadButton}">
                                        <Path Width="6"
                                              Height="10"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                              Fill="{Binding RelativeSource={RelativeSource AncestorType=ButtonBase},
                                                             Path=Foreground}"
                                              Stretch="Fill" />
                                    </Button>

                                    <Button x:Name="PART_HeaderButton"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            FontWeight="Bold"
                                            Padding="1,5,1,8"
                                            Style="{StaticResource CalendarHeadButton}" />

                                    <Button x:Name="PART_NextButton"
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Width="28"
                                            Height="20"
                                            HorizontalAlignment="Right"
                                            Focusable="False"
                                            Padding="0,-3,14,0"
                                            Style="{StaticResource CalendarHeadButton}">
                                        <Path Width="6"
                                              Height="10"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                              Fill="{Binding RelativeSource={RelativeSource AncestorType=ButtonBase},
                                                             Path=Foreground}"
                                              Stretch="Fill" />
                                    </Button>

                                </Grid>

                                <Grid x:Name="PART_MonthView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"
                                      Margin="6,0,6,6"
                                      HorizontalAlignment="Center"
                                      Visibility="Visible">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                </Grid>

                                <Grid x:Name="PART_YearView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"
                                      Margin="6,0,7,6"
                                      HorizontalAlignment="Center"
                                      Visibility="Hidden">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Fill="{DynamicResource ModernForeground}"
                                   Opacity=".1"
                                   Stretch="Fill"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Value="Year">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource AncestorType="{x:Type Calendar}" Mode="FindAncestor" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Decade">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource AncestorType="{x:Type Calendar}" Mode="FindAncestor" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCalendarDayButton" TargetType="CalendarDayButton">
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <Rectangle x:Name="TodayBackground"
                                   Fill="{DynamicResource ModernAccent}"
                                   Opacity="0" />
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{DynamicResource ModernBackground4}"
                                   Opacity="0" />
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="HighlightBackground"
                                   Fill="{DynamicResource ModernBackground4}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="NormalText"
                                          Margin="6 1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                        <Path x:Name="Blackout"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                              Fill="#FF000000"
                              Opacity="0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{DynamicResource ModernAccent}"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="NormalText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".35" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBlackedOut" Value="True">
                            <Setter TargetName="Blackout" Property="Opacity" Value=".2" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsInactive" Value="True">
                            <Setter Property="Foreground" Value="#FF777777" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="SelectedBackground" Property="Opacity" Value=".75" />
                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter TargetName="TodayBackground" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCalendarButton" TargetType="CalendarButton">
        <Setter Property="Background" Value="{DynamicResource ModernBackground4}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0" />
                        <Rectangle x:Name="Background"
                                   Fill="{TemplateBinding Background}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="NormalText"
                                          Margin="1,0,1,1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{DynamicResource ModernAccent}"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".75" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="#FF777777" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="CalendarButtonFocusVisual"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernCalendar" TargetType="Calendar">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="CalendarItemStyle" Value="{StaticResource ModernCalendarItem}" />
        <Setter Property="CalendarButtonStyle" Value="{StaticResource ModernCalendarButton}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource ModernCalendarDayButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <StackPanel Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ModernDatePicker" TargetType="{x:Type DatePicker}">
        <Setter Property="CalendarStyle" Value="{StaticResource ModernCalendar}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Margin="0"
                                                   HorizontalContentAlignment="Stretch"
                                                   VerticalContentAlignment="Center"
                                                   Background="Transparent"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Padding="0" />

                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       StaysOpen="False" />

                                <Button x:Name="PART_Button"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Margin="3 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Cursor="Hand"
                                        Focusable="False"
                                        Style="{StaticResource ModernButtonNoChrome}">
                                    <!--<Border BorderThickness="2 4 2 2" BorderBrush="{TemplateBinding Foreground}" Padding="4 0">
                                        <TextBlock Text="15" FontSize="9" FontWeight="Bold" FontFamily="arial" TextOptions.TextFormattingMode="Display"
                                                   Foreground="{TemplateBinding Foreground}"></TextBlock>
                                    </Border>-->
                                    <Viewbox Width="20" Height="17">
                                        <Canvas x:Name="appbar_calendar_14"
                                                Width="40.0056"
                                                Height="39.0058"
                                                Clip="F1 M 0,0L 76.0106,0L 76.0106,76.0106L 0,76.0106L 0,0">
                                            <Path Width="40.0056"
                                                  Height="39.0058"
                                                  Data="F1 M 34.0047,52.0073L 31.0042,52.0073L 31.0042,38.5053C 29.6649,39.8964 28.157,40.7849 26.3412,41.4502L 26.3412,37.7553C 27.2998,37.4474 28.3405,36.8645 29.4634,36.0068C 30.5862,35.149 31.3572,34.1483 31.7762,33.0046L 34.0047,33.0046L 34.0047,52.0073 Z M 45.0063,52.0073L 45.0063,48.0067L 37.0052,48.0067L 37.0052,45.0063L 45.0063,33.0046L 48.0067,33.0046L 48.0067,45.0063L 50.007,45.0063L 50.007,48.0067L 48.0067,48.0067L 48.0067,52.0073L 45.0063,52.0073 Z M 45.0063,45.0063L 45.0063,38.2555L 40.2556,45.0063L 45.0063,45.0063 Z M 18.0025,57.0082L 18.0025,23.0033L 23.0032,23.0033L 23.0032,20.0029C 23.0033,18.898 23.8988,18.0026 25.0035,18.0026L 29.004,18.0026C 30.1087,18.0026 31.0042,18.898 31.0043,20.0026L 31.0043,23.0033L 45.0063,23.0033L 45.0062,20.0026C 45.0062,18.8979 45.9018,18.0023 47.0065,18.0023L 51.0071,18.0023C 52.1118,18.0023 53.0074,18.8979 53.0074,20.0026L 53.0074,23.0033L 58.0081,23.0033L 58.0081,57.0082L 18.0025,57.0082 Z M 21.0029,54.0078L 55.0076,54.0078L 55.0076,31.0044L 21.0029,31.0044L 21.0029,54.0078 Z M 48.5067,20.0029C 47.6782,20.0029 47.0065,20.6746 47.0065,21.5031L 47.0065,24.5035C 47.0065,25.3321 47.6782,26.0038 48.5067,26.0038L 49.5068,26.0038C 50.3354,26.0038 51.007,25.3321 51.007,24.5035L 51.007,21.5031C 51.007,20.6746 50.3354,20.0029 49.5068,20.0029L 48.5067,20.0029 Z M 26.5037,20.0029C 25.6751,20.0029 25.0035,20.6745 25.0035,21.5031L 25.0035,24.5035C 25.0035,25.3321 25.6751,26.0037 26.5037,26.0037L 27.5038,26.0037C 28.3324,26.0037 29.004,25.3321 29.004,24.5035L 29.004,21.5031C 29.004,20.6745 28.3324,20.0029 27.5038,20.0029L 26.5037,20.0029 Z "
                                                  Fill="{TemplateBinding Foreground}"
                                                  Stretch="Fill" />
                                        </Canvas>
                                    </Viewbox>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxHoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxHoverBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextBoxActiveBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource TextBoxDisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource TextBoxDisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePickerTextBox">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="1"
                                Padding="{TemplateBinding Padding}">
                            <Grid x:Name="WatermarkContent"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="watermark_decorator" Margin="1 0">
                                    <ContentControl x:Name="PART_Watermark"
                                                    Focusable="False"
                                                    Foreground="{StaticResource TextBoxDisabledForeground}"
                                                    IsHitTestVisible="False"
                                                    Opacity="0" />
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="0"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unwatermarked" />
                                <VisualState Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="PART_Watermark"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  scrollbar  -->
    <ControlTemplate x:Key="ScrollbarRepeatButtonTemplate" TargetType="RepeatButton">
        <Border x:Name="Root" Background="Transparent" />
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollbarVerticalIncrementTemplate" TargetType="RepeatButton">
        <Grid x:Name="Root">
            <Rectangle x:Name="BackgroundPointerOver"
                       Fill="{DynamicResource ScrollBarButtonPointerOverBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPointerOverBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPointerOver"
                  Width="10.944"
                  Height="9.673"
                  Margin="0,7,0,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Top"
                  Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z"
                  Fill="{DynamicResource ScrollBarButtonForegroundThemeBrush}"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
            <Rectangle x:Name="BackgroundPressed"
                       Fill="{DynamicResource ScrollBarButtonPressedBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPressedBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPressed"
                  Width="10.944"
                  Height="9.673"
                  Margin="0,7,0,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Top"
                  Data="M0.062734604,0 L5.4720101,5.5553346 L10.881266,0 L10.944,4.1183305 L5.4776478,9.6730003 L0,4.1183305 z"
                  Fill="{DynamicResource ScrollBarButtonPressedForegroundThemeBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPointerOver" Property="Fill" Value="{DynamicResource ScrollBarButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPressed" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollbarVerticalDecrementTemplate" TargetType="RepeatButton">
        <Grid x:Name="Root">
            <Rectangle x:Name="BackgroundPointerOver"
                       Fill="{DynamicResource ScrollBarButtonPointerOverBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPointerOverBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPointerOver"
                  Width="10.944"
                  Height="9.673"
                  Margin="0,0,0,7"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Bottom"
                  Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z"
                  Fill="{DynamicResource ScrollBarButtonForegroundThemeBrush}"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
            <Rectangle x:Name="BackgroundPressed"
                       Fill="{DynamicResource ScrollBarButtonPressedBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPressedBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPressed"
                  Width="10.944"
                  Height="9.673"
                  Margin="0,0,0,7"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Bottom"
                  Data="M5.6343679,0 L11.113339,5.5538998 L11.05059,9.6716595 L5.640007,4.117095 L0.22944409,9.6716595 L0.1666943,5.5538998 z"
                  Fill="{DynamicResource ScrollBarButtonPressedForegroundThemeBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPointerOver" Property="Fill" Value="{DynamicResource ScrollBarButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPressed" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollbarThumbTemplate" TargetType="Thumb">
        <Grid>
            <Grid x:Name="ThumbVisual" Margin="0">
                <Border x:Name="Background"
                        Background="{DynamicResource ScrollBarThumbBackgroundThemeBrush}"
                        BorderBrush="{DynamicResource ScrollBarThumbBorderThemeBrush}"
                        BorderThickness="1" />
                <Border x:Name="BackgroundPointerOver"
                        Background="{DynamicResource ScrollBarThumbPointerOverBackgroundThemeBrush}"
                        BorderBrush="{DynamicResource ScrollBarThumbPointerOverBorderThemeBrush}"
                        BorderThickness="1"
                        Opacity="0" />
                <Border x:Name="BackgroundPressed"
                        Background="{DynamicResource ScrollBarThumbPressedBackgroundThemeBrush}"
                        BorderBrush="{DynamicResource ScrollBarThumbPressedBorderThemeBrush}"
                        BorderThickness="1"
                        Opacity="0" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                <Setter TargetName="Background" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollbarHorizontalIncrementTemplate" TargetType="RepeatButton">
        <Grid x:Name="Root">
            <Rectangle x:Name="BackgroundPointerOver"
                       Fill="{DynamicResource ScrollBarButtonPointerOverBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPointerOverBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPointerOver"
                  Width="9.673"
                  Height="10.944"
                  Margin="7,0,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z"
                  Fill="{DynamicResource ScrollBarButtonForegroundThemeBrush}"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
            <Rectangle x:Name="BackgroundPressed"
                       Fill="{DynamicResource ScrollBarButtonPressedBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPressedBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPressed"
                  Width="9.673"
                  Height="10.944"
                  Margin="7,0,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Data="M4.1183305,0 L9.6730003,5.4663525 L4.1183305,10.944 L0,10.881266 L5.5553346,5.4719901 L0,0.062734604 z"
                  Fill="{DynamicResource ScrollBarButtonPressedForegroundThemeBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPointerOver" Property="Fill" Value="{DynamicResource ScrollBarButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPressed" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollbarHorizontalDecrementTemplate" TargetType="RepeatButton">
        <Grid x:Name="Root">
            <Rectangle x:Name="BackgroundPointerOver"
                       Fill="{DynamicResource ScrollBarButtonPointerOverBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPointerOverBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPointerOver"
                  Width="9.673"
                  Height="10.944"
                  Margin="0,0,7,0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z"
                  Fill="{DynamicResource ScrollBarButtonForegroundThemeBrush}"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
            <Rectangle x:Name="BackgroundPressed"
                       Fill="{DynamicResource ScrollBarButtonPressedBackgroundThemeBrush}"
                       Opacity="0"
                       Stroke="{DynamicResource ScrollBarButtonPressedBorderThemeBrush}"
                       StrokeThickness="1" />
            <Path x:Name="ArrowPressed"
                  Width="9.673"
                  Height="10.944"
                  Margin="0,0,7,0"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Data="M5.5546699,0 L9.6730003,0.062734604 L4.1176658,5.4720101 L9.6730003,10.881266 L5.5546699,10.944 L0,5.4776478 z"
                  Fill="{DynamicResource ScrollBarButtonPressedForegroundThemeBrush}"
                  Opacity="0"
                  Stretch="Fill"
                  StrokeThickness="0"
                  UseLayoutRounding="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPointerOver" Property="Fill" Value="{DynamicResource ScrollBarButtonPointerOverForegroundThemeBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
                <Setter TargetName="ArrowPressed" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ModernScrollBar" TargetType="ScrollBar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="MinWidth" Value="17" />
        <Setter Property="MinHeight" Value="17" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="VerticalRoot">
                        <Grid.Resources />
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.RowSpan="3"
                                   Margin="0"
                                   Fill="{DynamicResource ScrollBarTrackBackgroundThemeBrush}"
                                   Stroke="{DynamicResource ScrollBarTrackBorderThemeBrush}"
                                   StrokeThickness="{DynamicResource ScrollBarTrackBorderThemeThickness}" />
                        <RepeatButton x:Name="VerticalSmallDecrease"
                                      Grid.Row="0"
                                      Height="33"
                                      MinWidth="17"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Focusable="False"
                                      Interval="50"
                                      IsTabStop="False"
                                      Template="{DynamicResource ScrollbarVerticalDecrementTemplate}" />

                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="VerticalLargeDecrease"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Command="{x:Static ScrollBar.PageUpCommand}"
                                              Focusable="False"
                                              Interval="50"
                                              IsTabStop="False"
                                              Template="{DynamicResource ScrollbarRepeatButtonTemplate}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="VerticalLargeIncrease"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              Command="{x:Static ScrollBar.PageDownCommand}"
                                              Focusable="False"
                                              Interval="50"
                                              IsTabStop="False"
                                              Template="{DynamicResource ScrollbarRepeatButtonTemplate}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="VerticalThumb"
                                       Width="17"
                                       MinHeight="48"
                                       Background="{TemplateBinding Background}"
                                       Template="{DynamicResource ScrollbarThumbTemplate}" />
                            </Track.Thumb>
                        </Track>

                        <RepeatButton x:Name="VerticalSmallIncrease"
                                      Grid.Row="2"
                                      Height="33"
                                      MinWidth="17"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Focusable="False"
                                      Interval="50"
                                      IsTabStop="False"
                                      Template="{DynamicResource ScrollbarVerticalIncrementTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid x:Name="HorizontalRoot">
                                <Grid.Resources />
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="3"
                                           Margin="0"
                                           Fill="{DynamicResource ScrollBarTrackBackgroundThemeBrush}"
                                           Stroke="{DynamicResource ScrollBarTrackBorderThemeBrush}"
                                           StrokeThickness="{DynamicResource ScrollBarTrackBorderThemeThickness}" />

                                <RepeatButton x:Name="HorizontalSmallDecrease"
                                              Grid.Column="0"
                                              Width="33"
                                              MinHeight="17"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              Focusable="False"
                                              Interval="50"
                                              IsTabStop="False"
                                              Template="{DynamicResource ScrollbarHorizontalDecrementTemplate}" />

                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalLargeDecrease"
                                                      Grid.Column="1"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Focusable="False"
                                                      Interval="50"
                                                      IsTabStop="False"
                                                      Template="{DynamicResource ScrollbarRepeatButtonTemplate}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="HorizontalLargeIncrease"
                                                      Grid.Column="3"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Stretch"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Focusable="False"
                                                      Interval="50"
                                                      IsTabStop="False"
                                                      Template="{DynamicResource ScrollbarRepeatButtonTemplate}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="HorizontalThumb"
                                               Grid.Column="2"
                                               Height="17"
                                               MinWidth="48"
                                               Background="{TemplateBinding Background}"
                                               Template="{DynamicResource ScrollbarThumbTemplate}" />
                                    </Track.Thumb>
                                </Track>

                                <RepeatButton x:Name="HorizontalSmallIncrease"
                                              Grid.Column="2"
                                              Width="33"
                                              MinHeight="17"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              Focusable="False"
                                              Interval="50"
                                              IsTabStop="False"
                                              Template="{DynamicResource ScrollbarHorizontalIncrementTemplate}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernScrollViewer" TargetType="ScrollViewer">
        <!--<Setter Property="local:ScrollViewerUI.SimulateHWheel" Value="True"/>-->
        <Setter Property="local:ScrollViewerUI.HandleHWheel" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <!--<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>-->
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{Binding HorizontalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border x:Name="ScrollBarSeparator"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Background="{DynamicResource ScrollBarTrackBackgroundThemeBrush}"
                                    BorderBrush="{DynamicResource ScrollBarTrackBorderThemeBrush}"
                                    BorderThickness="0,0,1,1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ScrollViewerUI.OverContent" Value="True">
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernAnimatedScrollViewer" TargetType="ScrollViewer">
        <!--<Setter Property="local:ScrollViewerUI.SimulateHWheel" Value="True"/>-->
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="Grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="Collapsed"
                                       Value="{Binding VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar x:Name="PART_AniVerticalScrollBar"
                                       Grid.Column="1"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="0" />

                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="Collapsed"
                                       Value="{Binding HorizontalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar x:Name="PART_AniHorizontalScrollBar"
                                       Grid.Row="1"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="0" />
                            <Border x:Name="ScrollBarSeparator"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Background="{DynamicResource ScrollBarTrackBackgroundThemeBrush}"
                                    BorderBrush="{DynamicResource ScrollBarTrackBorderThemeBrush}"
                                    BorderThickness="0,0,1,1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ScrollViewerUI.OverContent" Value="True">
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="PART_ScrollContentPresenter" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  thumb & slider  -->
    <Style x:Key="ModernThumb" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource ThumbBackgroundThemeBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource ThumbBorderThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="BackgroundPointerOver"
                                Background="{DynamicResource ThumbPointerOverBackgroundThemeBrush}"
                                BorderBrush="{DynamicResource ThumbPointerOverBorderThemeBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="BackgroundPressed"
                                Background="{DynamicResource ThumbPressedBackgroundThemeBrush}"
                                BorderBrush="{DynamicResource ThumbPressedBorderThemeBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundPointerOver" Property="Opacity" Value="1" />
                            <Setter TargetName="Background" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="BackgroundPressed" Property="Opacity" Value="1" />
                            <Setter TargetName="Background" Property="Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="Thumb">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource SliderThumbBorderThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource SliderThumbBackgroundThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSlider" TargetType="Slider">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <!--<Setter Property="Background" Value="{DynamicResource SliderTrackBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SliderBorderThemeBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource SliderBorderThemeThickness}" />-->
        <Setter Property="Foreground" Value="{DynamicResource SliderTrackDecreaseBackgroundThemeBrush}" />
    </Style>

    <!--  menus  -->
    <Style x:Key="ContextMenuPopup" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="StaysOpen" Value="False" />
    </Style>
    <Style x:Key="ContextMenuBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource MenuBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="Padding" Value="0 4" />
    </Style>

    <Style x:Key="ModernContextMenu" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="BorderThickness" Value="{DynamicResource MenuBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="Padding" Value="0 4" />
        <!--<Setter Property="modern:UIHooks.AutoDpiScale" Value="True" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <theme:SystemDropShadowChrome x:Name="Shadow"
                                                  Margin="{DynamicResource PopUpShadowMargin}"
                                                  SnapsToDevicePixels="True"
                                                  Color="{DynamicResource PopupShadowColor}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer CanContentScroll="True" Style="{DynamicResource ModernMenuScrollViewer}">
                                <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                UseLayoutRounding="True" />
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="False">
                            <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Source={x:Static local:PlatformInfo.IsLegacyOS}}" Value="True">
                            <Setter Property="Padding" Value="0"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource AccentForeground}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ModernMenu" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource ModernBackground2}" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>

    <Style x:Key="ModernMenuScrollButton" TargetType="RepeatButton">
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <DockPanel Background="{DynamicResource ModernBackground}" SnapsToDevicePixels="true">
                        <Rectangle x:Name="R1"
                                   Width="1"
                                   DockPanel.Dock="Right"
                                   Fill="Transparent" />
                        <Rectangle x:Name="B1"
                                   Height="1"
                                   DockPanel.Dock="Bottom"
                                   Fill="Transparent" />
                        <Rectangle x:Name="L1"
                                   Width="1"
                                   DockPanel.Dock="Left"
                                   Fill="Transparent" />
                        <Rectangle x:Name="T1"
                                   Height="1"
                                   DockPanel.Dock="Top"
                                   Fill="Transparent" />
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="R1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="B1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                            <Setter TargetName="L1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="T1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style x:Key="ModernMenuScrollViewer" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false"
                                      Style="{StaticResource ModernMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource ModernForeground}" />
                        </RepeatButton>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false"
                                      Style="{StaticResource ModernMenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100"
                                              FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource ModernForeground}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ModernTopLevelHeaderTemplate" TargetType="MenuItem">
        <Border x:Name="Root" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="0 0 2 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="15"
                        VerticalAlignment="Center"
                        Visibility="Collapsed">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          HorizontalAlignment="Left"
                          Data="{StaticResource Checkmark}"
                          Fill="{TemplateBinding Foreground}"
                          FlowDirection="LeftToRight" />
                </Border>
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Focusable="false"
                       IsOpen="{Binding IsSubmenuOpen,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PlacementTarget="{Binding ElementName=Root}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="-2">
                    <theme:SystemDropShadowChrome x:Name="Shadow"
                                                  Margin="{DynamicResource PopUpShadowMargin}"
                                                  Color="{DynamicResource PopupShadowColor}">
                        <Border Padding="0" Style="{StaticResource ContextMenuBorder}">
                            <ScrollViewer x:Name="SubMenuScrollViewer"
                                          CanContentScroll="true"
                                          Style="{DynamicResource ModernMenuScrollViewer}">
                                <!--<Grid>-->
                                <!--<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                    Width="0">
                                <Rectangle Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                            </Canvas>-->
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--</Grid>-->
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="False">
                <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                <!--<Setter Property="Foreground" Value="{DynamicResource ModernBackground}" />-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernTopLevelItemTemplate" TargetType="MenuItem">
        <Border x:Name="Root" Background="{TemplateBinding Background}">
            <Grid Margin="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="0 0 2 0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="15"
                        Visibility="Collapsed">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          HorizontalAlignment="Left"
                          Data="{StaticResource Checkmark}"
                          Fill="{TemplateBinding Foreground}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernSubmenuHeaderTemplate" TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true">
            <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      MinWidth="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Width="22"
                        Height="22"
                        Margin="1"
                        VerticalAlignment="Center"
                        Visibility="Hidden">
                    <Path x:Name="Glyph"
                          Width="9"
                          Height="11"
                          Data="{StaticResource Checkmark}"
                          Fill="{TemplateBinding Foreground}"
                          FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  ContentSource="Header"
                                  RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock x:Name="gesture"
                           Grid.Column="4"
                           Margin="{TemplateBinding Padding}"
                           VerticalAlignment="Center"
                           Opacity="0.7"
                           Text="{TemplateBinding InputGestureText}"
                           Visibility="Collapsed" />
                <Path Grid.Column="5"
                      Margin="4,0,0,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Data="{StaticResource RightArrow}"
                      Fill="{TemplateBinding Foreground}" />
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Focusable="false"
                   HorizontalOffset="-2"
                   IsOpen="{Binding IsSubmenuOpen,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Right"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                   VerticalOffset="-3">
                <theme:SystemDropShadowChrome x:Name="Shadow"
                                              Margin="{DynamicResource PopUpShadowMargin}"
                                              Color="{DynamicResource PopupShadowColor}">
                    <Border Padding="0" Style="{StaticResource ContextMenuBorder}">
                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Style="{DynamicResource ModernMenuScrollViewer}">
                            <!--<Grid>-->
                            <!--<Canvas HorizontalAlignment="Left" Height="0"
                                        VerticalAlignment="Top" Width="0">
                                    <Rectangle
                                            Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                            Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                </Canvas>-->
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            Grid.IsSharedSizeScope="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <!--</Grid>-->
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Source={x:Static local:PlatformInfo.IsLegacyOS}}" Value="True">
                <Setter TargetName="gesture" Property="Opacity" Value="1"/>
            </DataTrigger>-->
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="False">
                <Setter TargetName="Shadow" Property="Color" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ModernSubmenuItemTemplate" TargetType="MenuItem">
        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"
                                  MinWidth="24"
                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="37" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="Icon"
                              Margin="1"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              ContentSource="Icon"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="Hidden">
                <Path x:Name="Glyph"
                      Width="9"
                      Height="11"
                      Data="{StaticResource Checkmark}"
                      Fill="{TemplateBinding Foreground}"
                      FlowDirection="LeftToRight" />
            </Border>
            <ContentPresenter Grid.Column="2"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              ContentSource="Header"
                              RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <TextBlock x:Name="gesture"
                       Grid.Column="4"
                       Margin="{TemplateBinding Padding}"
                       VerticalAlignment="Center"
                       Opacity="0.7"
                       Text="{TemplateBinding InputGestureText}" />
        </Grid>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Source={x:Static local:PlatformInfo.IsLegacyOS}}" Value="True">
                <Setter TargetName="gesture" Property="Opacity" Value="1"/>
            </DataTrigger>-->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <!--<Setter Property="Background" Value="{DynamicResource ModernBackground3}" />-->
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ModernMenuItem" TargetType="MenuItem">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <!--<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Template" Value="{DynamicResource ModernSubmenuItemTemplate}" />
        <Setter Property="Padding" Value="0 4 0 5" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="10 4 10 5" />
                <Setter Property="Template" Value="{DynamicResource ModernTopLevelHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="10 4 10 5" />
                <Setter Property="Template" Value="{DynamicResource ModernTopLevelItemTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource ModernSubmenuHeaderTemplate}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem" />
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernSeparator" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground3}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Height="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid Margin="0,6,0,4">
                        <Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="{DynamicResource ModernForeground4}" />
                        <!--<Rectangle Height="1" Margin="30,1,1,0" Fill="White" />-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  listview  -->

    <Style x:Key="ModernListViewItem" TargetType="ListViewItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha9}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha7}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernListView" TargetType="ListView">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ModernListViewItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer local:ScrollViewerUI.HandleHWheel="True"
                                      Padding="{TemplateBinding Padding}"
                                      Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernGridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Canvas.Right" Value="-9" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0 6" />
        <Setter Property="Background" Value="{DynamicResource ModernForeground4}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Rectangle Width="1"
                                   HorizontalAlignment="Center"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernGridViewColumnHeader" TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground2}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="Margin" Value="-2 0 0 0" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <TextBlock x:Name="SortAsc"
                                           Margin="0 -2 0 0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MarlettGlyph}"
                                           Text="t"
                                           Visibility="Collapsed" />
                                <TextBlock x:Name="SortDesc"
                                           Margin="0 -4 0 0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MarlettGlyph}"
                                           Text="u"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource ModernGridViewColumnHeaderGripper}" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ListViewUI.SortDirection" Value="Ascending">
                            <Setter TargetName="SortAsc" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="local:ListViewUI.SortDirection" Value="Descending">
                            <Setter TargetName="SortDesc" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ModernBackground4}" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.4082" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"
                                           Fill="{DynamicResource ModernForeground}"
                                           Opacity="0.4697" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height" Value="Auto">
                                    <Setter Property="MinHeight" Value="20" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  datagrid  -->

    <Style x:Key="ModernDataGridSelectAllButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="BorderThickness" Value="0 0 1 2" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="Border"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True" />
                        <Polygon x:Name="Arrow"
                                 Margin="{TemplateBinding Padding}"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom"
                                 Fill="{TemplateBinding Foreground}"
                                 Opacity="0.4"
                                 Points="0,10 10,10 10,0"
                                 Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernBackground4}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernRowHeaderGripper" TargetType="Thumb">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="Padding" Value="8 4" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>

                        <Rectangle Name="Highlighter"
                                   Margin="1 0 0 0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{DynamicResource ModernBackground2}"
                                   Visibility="Collapsed" />

                        <Border Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <TextBlock x:Name="SortAsc"
                                           Margin="0 -2 0 0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MarlettGlyph}"
                                           Text="t"
                                           Visibility="Collapsed" />
                                <TextBlock x:Name="SortDesc"
                                           Margin="0 -4 0 0"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Top"
                                           Style="{StaticResource MarlettGlyph}"
                                           Text="u"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Canvas>
                            <Thumb x:Name="Separator" Style="{StaticResource ModernGridViewColumnHeaderGripper}" />
                        </Canvas>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource ModernColumnHeaderGripper}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource ModernColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                            <Setter TargetName="Highlighter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="Background" Value="{DynamicResource ModernBackground4}" />
                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortAsc" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortDesc" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernDataGridRowHeader" TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="{DynamicResource ModernBackground2}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="BorderThickness" Value="0 0 1 1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernBackground4}" />
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernDataGridCell" TargetType="DataGridCell">
        <!--<Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground4}" />-->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Border"
                            Margin="{TemplateBinding Margin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <!--<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />-->
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>-->
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernDataGridRow" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent" />
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />-->
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="Red"
                               Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border x:Name="DGR_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            <DataGridDetailsPresenter Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                                                     Path=AreRowDetailsFrozen,
                                                                                                                     Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                                                                     ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />

                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                    Path=HeadersVisibility,
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha9}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha7}" />
            </MultiTrigger>
            <!--<Trigger Property="IsNewItem" Value="True">
                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernDataGrid" TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ModernForeground5}" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ModernDataGridColumnHeader}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource ModernDataGridRowHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource ModernDataGridCell}" />
        <Setter Property="RowStyle" Value="{StaticResource ModernDataGridRow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Button Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                Path=CellsPanelHorizontalOffset}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{StaticResource ModernDataGridSelectAllButton}"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                     Path=HeadersVisibility,
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                     ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Grid.ColumnSpan="2"
                                                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                             Path=HeadersVisibility,
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding Path=VerticalOffset,
                                                                   RelativeSource={RelativeSource TemplatedParent},
                                                                   Mode=OneWay}" />

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding Path=HorizontalOffset,
                                                                       RelativeSource={RelativeSource TemplatedParent},
                                                                       Mode=OneWay}" />

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>-->
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader IsHitTestVisible="False" Name="PART_FillerColumnHeader"/>
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="BorderBrush" Value="#FF688CAF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              Padding ="{TemplateBinding Padding}"
                              Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="#FF000080" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              SnapsToDevicePixels="True">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <!--<Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"
                       Color="#FF000000" />-->

    <!--<Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ContentPresenter Margin="1,1,1,1"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                IsHitTestVisible="false" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->




    <!--  tabs  -->

    <Style x:Key="ModernTabItem" TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground2}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8 6 8 2" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              TextElement.FontSize="{DynamicResource SubTitleFontSize}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <!--<Setter Property="Panel.ZIndex" Value="1" />-->
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ModernAccentAlpha2}" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>-->
                        <!--<Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTabItem2" TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ModernFocusVisualDashed}" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10 4" />
        <Setter Property="BorderThickness" Value="1 1 1 0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Opacity" Value=".85" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ContentSource="Header"
                                              Focusable="False"
                                              RecognizesAccessKey="{Binding Path=(local:ContentUI.RecognizeAccessKey), RelativeSource={RelativeSource TemplatedParent}}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
                            <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                            <!--<Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"/>-->
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" Value="1 0 1 1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" Value="1 1 0 1" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" Value="0 1 1 1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Top" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0 0 0 -1" />
                            <Setter TargetName="Content" Property="Margin" Value="0 0 0 1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Bottom" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0 -1 0 0" />
                            <Setter TargetName="Content" Property="Margin" Value="0 1 0 0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="0 0 -1 0" />
                            <Setter TargetName="Content" Property="Margin" Value="0 0 1 0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="TabStripPlacement" Value="Right" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1 0 0 0" />
                            <Setter TargetName="Content" Property="Margin" Value="1 0 0 0" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ModernTabItem}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Panel.ZIndex="1"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">

                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>-->
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>-->
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                            <!--<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  trees  -->
    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsClosed="True"
                            IsFilled="True"
                            StartPoint="0 0">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="TreeExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="BorderBrush" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Background" Value="{DynamicResource ModernBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="16"
                            Height="16"
                            Background="Transparent"
                            Padding="4 6 4 2">
                        <Path x:Name="ExpandPath"
                              Data="{StaticResource TreeArrow}"
                              Fill="{TemplateBinding Background}"
                              Stroke="{TemplateBinding BorderBrush}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" Value="{DynamicResource ModernForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ModernAccent}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ModernAccent}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <modern:TreeDepthLeftMarginConverter x:Key="ModernTreeDepthCalc" Length="19" />

    <Style x:Key="ModernTreeViewItem" TargetType="TreeViewItem">
        <!--  no focus visual since it doesn't display right (it includes child nodes)  -->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
        <Setter Property="Padding" Value="4 2" />
        <Setter Property="Foreground" Value="{DynamicResource ModernForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <Grid Margin="{Binding Converter={StaticResource ModernTreeDepthCalc}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="19" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander"
                                              ClickMode="Press"
                                              IsChecked="{Binding Path=IsExpanded,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource TreeExpandCollapseToggleStyle}" />
                                <ContentPresenter x:Name="PART_Header"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha9}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha8}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ModernBackground3}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="Bd" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ModernAccentAlpha7}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernForeground4}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ModernTreeView" TargetType="TreeView">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ModernTreeViewItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Name="_tv_scrollviewer_"
                                      Background="{TemplateBinding Background}"
                                      CanContentScroll="false"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ModernBackground3}" />
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>